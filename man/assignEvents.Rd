% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/EVENTS.R
\name{assignEvents}
\alias{assignEvents}
\title{assign readings to separate transit events}
\usage{
assignEvents(d,maxt=2.1)
}
\arguments{
\item{d}{A dataframe containing data from a single box from
SNBatWESTERHOLZ.RAWYYYY, as-is.}

\item{maxt}{Time-cutoff in seconds, if the timedifference between a line and
 the next is over maxt the line gets assigned to a new event.}
}
\value{
the original dataframe with added boutID (event ID) and
 transponder-with-na's-filled
}
\description{
\code{assignEvents} interprets whether a row of data belongs to the same or a
separate transit
}
\details{
\describe{ \item{general}{this function is called from loadEvents(),
 which processes the data in RAW_YYYY and saves events (visits/transits) to
 BETA_EventsYYYY. Running assignEvents() solo is only interesting if you're
 tweaking event assignment.} \item{event assignment} {The following criteria
 are used to identify the start of a new event: \itemize{ \item a change in
 boutlength of more than 20 \item a different transponder is read \item the
 current reading is more than maxt seconds after the previous one } Other
 options include the firing of both lightbarriers, which has a low rate of
 false positives- however, if one of the barriers malfunctions, you'd still
 want to try and extract proper transits, for which the change in boutlength
 is the most accurate. }}
}
\section{PLEASE NOTE, FIX NEEDED}{
 the way events are assigned now by
 assignEvents() is problematic when two birds visit the box simultaneously;
 each time a different transponder is read starts a new event, so when both
 birds visit their visits will typically be split into multiple visits. The
 problem with splitting the dataframe on transponder before assigning is that
 you then miss the first LB reading for most visits, which is essential for
 direction assignment. I wanted to solve this by not using a change in
 transponder reading to assign a new event, and changing extractEvents() and
 the ct tree accordingly, but i haven't tested this on the calibration data
 yet.
}
\seealso{
\code{\link{extractEvents}} for extracting and summarising events,
 \code{\link{loadEvents}} for the wrapper function that identifies, extracts,
 assigns direction, and loads events into BETA_EventsYYYY.
}

